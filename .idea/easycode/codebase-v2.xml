<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/com/example/arapp/ExampleInstrumentedTest.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/ui/theme/Color.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/ui/theme/Theme.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/ui/theme/Type.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/Artifact.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/ArtifactDetailActivity.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/ArtifactListActivity.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/ArtifactsFragment.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/DashboardActivity.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/DashboardFragment.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/DatabaseHelper.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/LoginActivity.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/MainActivity.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/ProfileFragment.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/main/java/com/example/arapp/RegisterActivity.kt;E:/My files/Academic Files/Cross AR files/AR app/app/src/test/java/com/example/arapp/ExampleUnitTest.kt;E:/My files/Academic Files/Cross AR files/AR app/app/build.gradle.kts;E:/My files/Academic Files/Cross AR files/AR app/app/google-services.json;E:/My files/Academic Files/Cross AR files/AR app/build.gradle.kts;E:/My files/Academic Files/Cross AR files/AR app/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;E:/My files/Academic Files/Cross AR files/AR app&quot;:&quot;{\&quot;/app/src/main/java/com/example/arapp/DashboardFragment.kt\&quot;:\&quot;`DashboardFragment`: A Fragment class that represents the dashboard screen of the AR app.\\n\\n`onCreateView`: A function that inflates the layout for the dashboard fragment and returns the root view.\\n\\nThis file defines a single Fragment class called `DashboardFragment` that represents the dashboard screen of the AR app. The `onCreateView` function is overridden to inflate the layout for the dashboard fragment and return the root view.\&quot;,\&quot;/app/google-services.json\&quot;:\&quot;This file appears to be a JSON configuration file for a Firebase project. It does not contain any classes or functions, but rather provides information about the project, such as the project number, project ID, and storage bucket. The file also includes client information, such as the mobile SDK app ID and the Android client package name. Additionally, it includes API key information and information about the app invite service. Overall, this file is used to configure the Firebase project settings for the associated Android application.\&quot;,\&quot;/app/src/androidTest/java/com/example/arapp/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for an Android app. It does not define any classes or functions, but rather tests the context of the app under test.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and tests the context of the app under test.\\n\\n`useAppContext()`: This function tests that the package name of the app under test is \\\&quot;com.example.arapp\\\&quot;.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle build script for an Android application. It sets up the project configuration, dependencies, and build settings for the application. The file does not contain any classes or functions, but rather defines the following:\\n\\n`plugins`: Applies the necessary Android, Kotlin, and Compose plugins to the project.\\n\\n`android`: Configures the Android-specific settings, such as the namespace, compile SDK version, default config, build types, and build features.\\n\\n`dependencies`: Specifies the external libraries and frameworks used in the project, including ARCore, Sceneform, Material, AndroidX, Compose, and Firebase.\\n\\nIn summary, this Gradle build script sets up the foundation for an Android application that uses Compose and integrates with ARCore, Sceneform, and Firebase services.\&quot;,\&quot;/app/src/main/java/com/example/arapp/Artifact.kt\&quot;:\&quot;This file defines a single data class `Artifact` that represents an artifact with various properties such as description, name, catalogue number, physical description, condition, restrictions, source, and an image resource ID.\\n\\n`Artifact`: A data class that represents an artifact with various properties.\&quot;,\&quot;/app/src/main/java/com/example/arapp/RegisterActivity.kt\&quot;:\&quot;`RegisterActivity`: This class represents the registration activity of the application, where users can register by providing a username and password.\\n\\n`onCreate`: This function is called when the activity is created, and it sets up the necessary views and event listeners for the registration process.\\n\\n`registerUser`: This function is called when the user clicks the \\\&quot;Register\\\&quot; button, and it attempts to register the user with the provided username and password using the `DatabaseHelper` class.\\n\\nOverall, this file contains the implementation of the registration functionality for the application, allowing users to create new accounts.\&quot;,\&quot;/app/src/main/java/com/example/arapp/ProfileFragment.kt\&quot;:\&quot;`ProfileFragment`: A Fragment class that represents the user\\u0027s profile in the AR app.\\n\\n`onCreateView`: A function that inflates the layout for the profile fragment and returns the root view.\\n\\nThis file defines a single `ProfileFragment` class that extends the `Fragment` class from the Android framework. The `ProfileFragment` class is responsible for displaying the user\\u0027s profile information in the AR app. The `onCreateView` function is overridden to inflate the layout for the profile fragment and return the root view.\&quot;,\&quot;/app/src/main/java/com/example/arapp/ArtifactListActivity.kt\&quot;:\&quot;This file contains the following classes and functions:\\n\\n`ArtifactListActivity`: This class represents the activity that displays a list of artifacts.\\n\\n`onCreate`: This function is called when the activity is created, and it sets up the recycler view to display the list of artifacts.\\n\\nThe file also defines an `Artifact` data class, which represents the details of an individual artifact, and an `ArtifactAdapter` class, which is responsible for providing the data to the recycler view and handling the click events on the artifacts.\&quot;,\&quot;/app/src/main/java/com/example/arapp/ArtifactsFragment.kt\&quot;:\&quot;This file contains the implementation of the `ArtifactsFragment` class, which is a Fragment that displays a list of artifacts and allows the user to navigate to the detail screen for a selected artifact.\\n\\n`ArtifactsFragment`: A Fragment that displays a list of artifacts and allows the user to navigate to the detail screen for a selected artifact.\\n\\n`onCreateView`: Inflates the fragment\\u0027s layout, retrieves the list of artifacts from the `DatabaseHelper`, and sets up the `ListView` to display the artifact names and handle item clicks.\&quot;,\&quot;/app/src/main/java/com/example/arapp/ArtifactDetailActivity.kt\&quot;:\&quot;This file contains a single class:\\n\\n`ArtifactDetailActivity`: This class represents an activity that displays detailed information about an artifact, including its name, catalogue number, physical description, condition, restrictions, and source, as well as an image of the artifact.\\n\\nThe file does not contain any functions, but the `onCreate()` method is overridden to set up the activity\\u0027s layout and populate the views with the artifact\\u0027s details.\&quot;,\&quot;/app/src/main/java/com/example/arapp/ui/theme/Theme.kt\&quot;:\&quot;This file defines the theme for the AR App, including the color schemes and typography. It does not contain any classes or functions, but rather uses Composable functions to define the theme.\\n\\n`DarkColorScheme`: Defines the dark color scheme for the app.\\n\\n`LightColorScheme`: Defines the light color scheme for the app.\\n\\n`ARAppTheme`: Composable function that sets the theme for the app based on the system\\u0027s dark mode setting and the availability of dynamic color support.\&quot;,\&quot;/app/src/main/java/com/example/arapp/DashboardActivity.kt\&quot;:\&quot;`DashboardActivity`: This class is the main activity of the application, which handles the navigation between different fragments using a bottom navigation view.\\n\\n`loadFragment`: This function is responsible for loading the specified fragment into the `fragmentContainer` view.\\n\\nThis file defines the main activity of the AR app, which uses a bottom navigation view to allow the user to switch between different fragments, such as the dashboard, artifacts, and profile.\&quot;,\&quot;/app/src/main/java/com/example/arapp/MainActivity.kt\&quot;:\&quot;This file is an Android Kotlin code for an Augmented Reality (AR) application. It uses the Google ARCore SDK to display a custom AR overlay with an artifact name on the screen.\\n\\n`MainActivity`: The main activity class that sets up the AR environment and handles the placement of the AR overlay.\\n\\n`placeObjectInFront()`: A function that creates a custom AR overlay with the artifact name and places it in front of the camera.\\n\\n`onResume()`: A function that resumes the AR scene view when the activity is resumed.\\n\\n`onPause()`: A function that pauses the AR scene view when the activity is paused.\\n\\n`onDestroy()`: A function that destroys the AR scene view when the activity is destroyed.\&quot;,\&quot;/app/src/main/java/com/example/arapp/ui/theme/Color.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a set of color values that can be used in a Compose-based Android application. The colors are defined in two sets: one set with darker shades and another set with lighter shades. These color values can be used throughout the application\\u0027s user interface to provide a consistent visual theme.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file that sets up common configuration options for all sub-projects or modules in the Android application. It does not contain any classes or functions, but instead, it sets up the following plugins:\\n\\n`alias(libs.plugins.android.application) apply false`: Applies the Android application plugin to the project.\\n`alias(libs.plugins.kotlin.android) apply false`: Applies the Kotlin Android plugin to the project.\\n`alias(libs.plugins.kotlin.compose) apply false`: Applies the Kotlin Compose plugin to the project.\\n`id(\\\&quot;com.google.gms.google-services\\\&quot;) version \\\&quot;4.4.3\\\&quot; apply false`: Applies the Google Play Services plugin to the project.\\n\\nThe purpose of this file is to centralize the configuration of these common plugins, making it easier to manage and maintain the project\\u0027s build setup across multiple sub-projects or modules.\&quot;,\&quot;/app/src/main/java/com/example/arapp/ui/theme/Type.kt\&quot;:\&quot;This file defines the typography styles for a Compose-based Android app. It sets the default text style for the `bodyLarge` component, and provides commented-out examples for other text styles such as `titleLarge` and `labelSmall`.\\n\\n`Typography`: Defines the set of Material typography styles to be used in the app.\&quot;,\&quot;/app/src/main/java/com/example/arapp/DatabaseHelper.kt\&quot;:\&quot;This file contains a `DatabaseHelper` class and several functions related to managing a SQLite database for an AR (Augmented Reality) app.\\n\\n`DatabaseHelper`: A class that extends `SQLiteOpenHelper` to create and manage the SQLite database for the AR app.\\n\\n`registerUser`: Registers a new user by inserting their username and password into the `users` table.\\n\\n`loginUser`: Checks if a user with the given username and password exists in the `users` table.\\n\\n`insertArtifact`: Inserts a new artifact with the given name and description into the `artifacts` table.\\n\\n`getArtifacts`: Retrieves a list of all artifacts stored in the `artifacts` table.\\n\\nThe file also defines several constants related to the database schema, such as the table and column names.\&quot;,\&quot;/app/src/main/java/com/example/arapp/LoginActivity.kt\&quot;:\&quot;`LoginActivity`: This class is the main activity for the login screen of the application.\\n\\n`onCreate`: This function is called when the activity is created, and it sets up the login screen with the necessary views and event listeners.\\n\\n`loginUser`: This function is called when the user clicks the login button, and it checks the user\\u0027s credentials against the database and logs the user in if the credentials are valid.\\n\\n`startActivity`: This function is called to navigate to the dashboard activity if the login is successful.\\n\\nOverall, this file contains the implementation of the login screen for the AR app, including the logic for authenticating users and navigating to the dashboard.\&quot;,\&quot;/app/src/test/java/com/example/arapp/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class with one test function. The file does not define any classes or functions, but rather contains a single unit test that checks if the addition of 2 and 2 is correct.\\n\\n`ExampleUnitTest`: A unit test class that contains a single test function to verify the correctness of a simple addition operation.\\n\\n`addition_isCorrect()`: A test function that checks if the addition of 2 and 2 is equal to 4, which is the expected result.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file is a Gradle configuration file that sets up the project\\u0027s dependency management and repository settings. It does not contain any classes or functions. Instead, it configures the following:\\n\\n`pluginManagement`: Specifies the repositories to be used for resolving Gradle plugins.\\n\\n`dependencyResolutionManagement`: Configures the repositories to be used for resolving project dependencies and sets the repositories mode to fail on project repositories.\\n\\n`rootProject.name`: Sets the name of the root project to \\\&quot;AR app\\\&quot;.\\n\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module in the project.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;E:/My files/Academic Files/Cross AR files/AR app&quot;:&quot;{\&quot;/app/src/androidTest/java/com/example/arapp/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/com/example/arapp/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/ui/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/ui/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/ui/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/ui/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/ui/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/ui/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/Artifact.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/Artifact.kt\&quot;,\&quot;file_name\&quot;:\&quot;Artifact.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/ArtifactDetailActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/ArtifactDetailActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;ArtifactDetailActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/ArtifactListActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/ArtifactListActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;ArtifactListActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/ArtifactsFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/ArtifactsFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;ArtifactsFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/DashboardActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/DashboardActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;DashboardActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/DashboardFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/DashboardFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;DashboardFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/DatabaseHelper.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/DatabaseHelper.kt\&quot;,\&quot;file_name\&quot;:\&quot;DatabaseHelper.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/LoginActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/LoginActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;LoginActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/ProfileFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/ProfileFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;ProfileFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/arapp/RegisterActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/arapp/RegisterActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;RegisterActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/com/example/arapp/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/com/example/arapp/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/google-services.json\&quot;:{\&quot;file_path\&quot;:\&quot;/app/google-services.json\&quot;,\&quot;file_name\&quot;:\&quot;google-services.json\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>